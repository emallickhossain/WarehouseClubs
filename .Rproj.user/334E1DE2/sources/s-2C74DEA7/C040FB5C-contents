# This plots average monthly spending and number of shopping trips
library(data.table)
library(purrr)
library(furrr)
library(lubridate)
library(plotly)
library(zoo)
library(fredr)
library(lfe)
library(Hmisc)
plan(multiprocess)
fredr_set_key(fredAPI)
year <- 2004:2016
path <- "/home/mallick/Desktop/Nielsen/Data/Clean/"

# Getting recession and pce
fred <- rbindlist(map(c("PCEPI", "USREC"), fredr, observation_start = as.Date("2004-01-01")))
fred <- dcast(fred, date ~ series_id, value.var = "value")
setnames(fred, c("date", "pce", "rec"))

panel <- fread(paste0(path, "fullPanel.csv"))
panel[, "household_income" := factor(household_income,
                                     levels = c("<25k", "25-50k", "50-100k", ">100k"),
                                     ordered = TRUE)]

getData <- function(year) {
  purch <- fread(paste0(path, "Purchases/purchase", year, ".csv"),
                 select = c("trip_code_uc", "total_price_paid"), key = "trip_code_uc")
  purch <- purch[, .(spend = sum(total_price_paid)), by = .(trip_code_uc)]

  trips <- fread(paste0(path, "Trips/trips", year, ".csv"),
                 select = c("household_code", "panel_year", "trip_code_uc",
                            "purchase_date"), key = "trip_code_uc")
  fullData <- merge(purch, trips, by = "trip_code_uc")
  fullData <- fullData[, .(spend = sum(spend),
                           trips = .N),
                       by = .(household_code, panel_year, purchase_date)]
  return(fullData)
}

fullData <- rbindlist(future_map(year, getData))
fullData[, "month" := as.integer(substr(purchase_date, 6, 7))]

# Collapsing to month
monthData <- fullData[, .(spend = sum(spend),
                          trips = sum(trips)),
                      by = .(household_code, panel_year, month)]
monthData[, "date" := as.Date(paste(panel_year, month, "01", sep = "-"))]
monthData <- merge(monthData, panel, by = c("household_code", "panel_year"))

# Trips and spending total
monthly <- monthData[, .(trips = weighted.mean(trips, w = projection_factor),
                         spendPerTrip = weighted.mean(spend / trips, w = projection_factor),
                         spend = weighted.mean(spend, w = projection_factor)),
                     keyby = .(date)]
monthly <- merge(monthly, fred, by = "date")
monthly[, ':=' (trips = rollmean(trips, k = 12, fill = c(NA, NULL, NA), align = "right"),
                realSpendPerTrip = rollmean(spendPerTrip / pce * 100, k = 12, fill = c(NA, NULL, NA), align = "right"),
                realSpend = rollmean(spend / pce * 100, k = 12, fill = c(NA, NULL, NA), align = "right"))]

chart <- plot_ly(data = monthly, x = ~date, height = 800, width = 1200) %>%
  add_lines(y = ~trips, line = list(width = 5)) %>%
  add_lines(y = ~rec * 1e6,
            line = list(width = 0),
            fill = "tozeroy",
            fillcolor = "rgba(64, 64, 64, 0.2)",
            showlegend = F,
            hoverinfo = "none") %>%
  layout(title = paste0("Average Monthly Shopping Trips (2004-2016)"),
         titlefont = list(size = 35),
         xaxis = list(title = "Year", titlefont = list(size = 30),
                      tickfont = list(size = 25)),
         yaxis = list(title = "Shopping Trips", range = c(0, 15), dtick = 3,
                      titlefont = list(size = 30), tickfont = list(size = 25)),
         # Pick positioning of legend so it doesn"t overlap the chart
         legend = list(yanchor = "top", x = 0.7, font = list(size = 20)),
         # Adjust margins so things look nice
         margin = list(l = 80, r = 100, t = 60, b = 150, pad = 10),
         annotations = list(text = "Source: Nielsen. <br>Note: 12-month rolling average is plotted.",
                            font = list(size = 20),
                            showarrow = FALSE,
                            align = "left", valign = "bottom",
                            xref = "paper", x = -0.03,
                            yref = "paper", y = -0.2))
export(chart, file = "./code/5_figures/aggregateTrips.png")

chart <- plot_ly(data = monthly, x = ~date, height = 800, width = 1200) %>%
  add_lines(y = ~realSpend, line = list(width = 5)) %>%
  add_lines(y = ~rec * 1e6,
            line = list(width = 0),
            fill = "tozeroy",
            fillcolor = "rgba(64, 64, 64, 0.2)",
            showlegend = F,
            hoverinfo = "none") %>%
  layout(title = paste0("Average Monthly Spending (2004-2016)"),
         titlefont = list(size = 35),
         xaxis = list(title = "Year", titlefont = list(size = 30),
                      tickfont = list(size = 25)),
         yaxis = list(title = "Spending ($2012)", range = c(0, 350), dtick = 50,
                      titlefont = list(size = 30), tickfont = list(size = 25)),
         # Pick positioning of legend so it doesn"t overlap the chart
         legend = list(yanchor = "top", x = 0.7, font = list(size = 20)),
         # Adjust margins so things look nice
         margin = list(l = 100, r = 100, t = 60, b = 150, pad = 10),
         annotations = list(text = "Source: Nielsen. <br>Note: 12-month moving average is plotted.",
                            font = list(size = 20),
                            showarrow = FALSE,
                            align = "left", valign = "bottom",
                            xref = "paper", x = -0.03,
                            yref = "paper", y = -0.2))
export(chart, file = "./code/5_figures/aggregateMonthlySpending.png")

# Trips and spending by Income
monthly <- monthData[, .(trips = weighted.mean(trips, w = projection_factor),
                         spendPerTrip = weighted.mean(spend / trips, w = projection_factor),
                         spend = weighted.mean(spend, w = projection_factor)),
                     keyby = .(household_income, date)]
monthly <- merge(monthly, fred, by = "date")
monthly[, ':=' (trips = rollmean(trips, k = 12, fill = c(NA, NULL, NA), align = "right"),
                realSpendPerTrip = rollmean(spendPerTrip / pce * 100, k = 12, fill = c(NA, NULL, NA), align = "right"),
                realSpend = rollmean(spend / pce * 100, k = 12, fill = c(NA, NULL, NA), align = "right")),
        by = .(household_income)]

chart <- plot_ly(data = monthly, x = ~date, height = 800, width = 1200) %>%
  add_lines(y = ~trips, split = ~household_income, line = list(width = 5)) %>%
  add_lines(y = ~rec * 1e6,
            line = list(width = 0),
            fill = "tozeroy",
            fillcolor = "rgba(64, 64, 64, 0.2)",
            showlegend = F,
            hoverinfo = "none") %>%
  layout(title = paste0("Average Monthly Shopping Trips (2004-2016)"),
         titlefont = list(size = 35),
         xaxis = list(title = "Year", titlefont = list(size = 30),
                      tickfont = list(size = 25)),
         yaxis = list(title = "Shopping Trips", range = c(0, 15), dtick = 3,
                      titlefont = list(size = 30), tickfont = list(size = 25)),
         # Pick positioning of legend so it doesn"t overlap the chart
         legend = list(yanchor = "top", x = 0.7, font = list(size = 20)),
         # Adjust margins so things look nice
         margin = list(l = 80, r = 100, t = 60, b = 150, pad = 10),
         annotations = list(text = "Source: Nielsen. <br>Note: 12-month rolling average is plotted.",
                            font = list(size = 20),
                            showarrow = FALSE,
                            align = "left", valign = "bottom",
                            xref = "paper", x = -0.03,
                            yref = "paper", y = -0.2))
export(chart, file = "./code/5_figures/aggregateTripsIncome.png")

chart <- plot_ly(data = monthly, x = ~date, height = 800, width = 1200) %>%
  add_lines(y = ~realSpend, split = ~household_income, line = list(width = 5)) %>%
  add_lines(y = ~rec * 1e6,
            line = list(width = 0),
            fill = "tozeroy",
            fillcolor = "rgba(64, 64, 64, 0.2)",
            showlegend = F,
            hoverinfo = "none") %>%
  layout(title = paste0("Average Monthly Spending (2004-2016)"),
         titlefont = list(size = 35),
         xaxis = list(title = "Year", titlefont = list(size = 30),
                      tickfont = list(size = 25)),
         yaxis = list(title = "Spending ($2012)", range = c(0, 450), dtick = 50,
                      titlefont = list(size = 30), tickfont = list(size = 25)),
         # Pick positioning of legend so it doesn"t overlap the chart
         legend = list(yanchor = "top", x = 0.7, y = 0.4, font = list(size = 20)),
         # Adjust margins so things look nice
         margin = list(l = 100, r = 100, t = 60, b = 150, pad = 10),
         annotations = list(text = "Source: Nielsen. <br>Note: 12-month moving average is plotted.",
                            font = list(size = 20),
                            showarrow = FALSE,
                            align = "left", valign = "bottom",
                            xref = "paper", x = -0.03,
                            yref = "paper", y = -0.2))
export(chart, file = "./code/5_figures/aggregateMonthlySpending.png")

# Regression for trips
fullData[, "monthlyTrips" := trips / 12]
reg <- felm(data = fullData, monthlyTrips ~ household_income + as.factor(panel_year) |
              household_size + as.factor(marital_status) + as.factor(race) +
              as.factor(hispanic_origin) + market + age + as.factor(college) + as.factor(urban) | 0 | market,
            weights = fullData$projection_factor)
yearFE <- data.table(est = reg$coefficients, se = reg$se, keep.rownames = TRUE)
setnames(yearFE, c("id", "est", "se"))
yearFE[, "id" := gsub("as\\.factor\\(panel_year\\)", "", id)]
chart <- plot_ly(data = yearFE[id %in% paste(2005:2016)], x = ~id, height = 800, width = 1200) %>%
  add_lines(y = ~est, error_y = ~list(value = se), line = list(width = 5)) %>%
  layout(title = paste0("Year Fixed Effects (2004-2016)"),
         titlefont = list(size = 35),
         xaxis = list(title = "Year", titlefont = list(size = 30),
                      tickfont = list(size = 25)),
         yaxis = list(title = "Log(Trips)", range = c(-3, 0), dtick = 1,
                      titlefont = list(size = 30), tickfont = list(size = 25)),
         # Pick positioning of legend so it doesn"t overlap the chart
         legend = list(yanchor = "top", x = 0.7, font = list(size = 20)),
         # Adjust margins so things look nice
         margin = list(l = 110, r = 100, t = 60, b = 150, pad = 10),
         annotations = list(text = "Source: Nielsen.",
                            font = list(size = 20),
                            showarrow = FALSE,
                            align = "left", valign = "bottom",
                            xref = "paper", x = -0.03,
                            yref = "paper", y = -0.2))
export(chart, file = "./code/5_figures/yearFE.png")

# Looking at Monthly spending
plot_ly(data = annual, x = ~panel_year, height = 800, width = 1200) %>%
  add_lines(y = ~realSpend, split = ~household_income, line = list(width = 5)) %>%
  layout(title = paste0("Average Monthly Expenditures by Income (2004-2016)"),
         titlefont = list(size = 35),
         xaxis = list(title = "Year", titlefont = list(size = 30),
                      tickfont = list(size = 25)),
         yaxis = list(title = "Monthly Expenditures ($2012)", range = c(0, 450), dtick = 50,
                      titlefont = list(size = 30), tickfont = list(size = 25)),
         # Pick positioning of legend so it doesn"t overlap the chart
         legend = list(yanchor = "top", x = 0.7, font = list(size = 20)),
         # Adjust margins so things look nice
         margin = list(l = 100, r = 100, t = 60, b = 150, pad = 10),
         annotations = list(text = "Source: Nielsen.",
                            font = list(size = 20),
                            showarrow = FALSE,
                            align = "left", valign = "bottom",
                            xref = "paper", x = -0.03,
                            yref = "paper", y = -0.2))

# Regression
fullData[, "realSpend" := spend / pce * 100]
reg <- felm(data = fullData, log(realSpend) ~ household_income * as.factor(panel_year) |
              household_size + as.factor(marital_status) + as.factor(race) +
              as.factor(hispanic_origin) + market + age + as.factor(college) + as.factor(urban) | 0 | market,
            weights = fullData$projection_factor)

# Looking at per trip spending
plot_ly(data = annual, x = ~panel_year, height = 800, width = 1200) %>%
  add_lines(y = ~realSpendPerTrip, split = ~household_income, line = list(width = 5)) %>%
  layout(title = paste0("Average Per-Trip Expenditures by Income (2004-2016)"),
         titlefont = list(size = 35),
         xaxis = list(title = "Year", titlefont = list(size = 30),
                      tickfont = list(size = 25)),
         yaxis = list(title = "Per-Trip Expenditures", range = c(0, 50), dtick = 10,
                      titlefont = list(size = 30), tickfont = list(size = 25)),
         # Pick positioning of legend so it doesn"t overlap the chart
         legend = list(yanchor = "top", x = 0.1, font = list(size = 20)),
         # Adjust margins so things look nice
         margin = list(l = 100, r = 100, t = 60, b = 150, pad = 10),
         annotations = list(text = "Source: Nielsen.",
                            font = list(size = 20),
                            showarrow = FALSE,
                            align = "left", valign = "bottom",
                            xref = "paper", x = -0.03,
                            yref = "paper", y = -0.2))

# Regression
reg <- felm(data = fullData, log(realSpendPerTrip) ~ household_income * as.factor(panel_year) |
              household_size + as.factor(marital_status) + as.factor(race) +
              as.factor(hispanic_origin) + market + age + as.factor(college) + as.factor(urban) | 0 | market,
            weights = fullData$projection_factor)

# Looking at per trip Quantities
plot_ly(data = annual, x = ~panel_year, height = 800, width = 1200) %>%
  add_lines(y = ~qPerTrip, split = ~household_income, line = list(width = 5)) %>%
  layout(title = paste0("Average Per-Trip Quantities by Income (2004-2016)"),
         titlefont = list(size = 35),
         xaxis = list(title = "Year", titlefont = list(size = 30),
                      tickfont = list(size = 25)),
         yaxis = list(title = "Per-Trip Quantities", range = c(0, 15), dtick = 5,
                      titlefont = list(size = 30), tickfont = list(size = 25)),
         # Pick positioning of legend so it doesn"t overlap the chart
         legend = list(yanchor = "top", x = 0.1, font = list(size = 20)),
         # Adjust margins so things look nice
         margin = list(l = 100, r = 100, t = 60, b = 150, pad = 10),
         annotations = list(text = "Source: Nielsen.",
                            font = list(size = 20),
                            showarrow = FALSE,
                            align = "left", valign = "bottom",
                            xref = "paper", x = -0.03,
                            yref = "paper", y = -0.2))

# Regression
reg <- felm(data = fullData, log(qPerTrip) ~ household_income * as.factor(panel_year) |
              household_size + as.factor(marital_status) + as.factor(race) +
              as.factor(hispanic_origin) + market + age + as.factor(college) + as.factor(urban) | 0 | market,
            weights = fullData$projection_factor)
